version: '3.7'

services:
  reverse-proxy:
    image: traefik:v2.0
    command:
      - --api.dashboard=true
      - --ping=true
      - --providers.docker
      - --providers.file.filename=/certs/traefik-dyn.yml
      - --entryPoints.web.address=:${EXTERNAL_HTTP_PORT}
      - --entryPoints.websecure.address=:${EXTERNAL_HTTPS_PORT}
      - --entryPoints.jnlp.address=:${EXTERNAL_JNLP_PORT}
      - --entryPoints.git-ssh.address=:${EXTERNAL_GITSSH_PORT}
    restart: unless-stopped
    labels:
      - traefik.http.routers.traefik.rule=Host(`traefik.${EXTERNAL_DOMAIN}`)
      - traefik.http.routers.traefik.tls=true
      - traefik.http.routers.traefik.entrypoints=websecure
      - traefik.http.routers.traefik.service=api@internal
      - traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https
      - traefik.http.routers.redirs.rule=hostregexp(`{host:.+}`)
      - traefik.http.routers.redirs.entrypoints=web
      - traefik.http.routers.redirs.middlewares=redirect-to-https
    read_only: true
    ports:
      - "${EXTERNAL_HTTP_PORT}:${EXTERNAL_HTTP_PORT}"
      - "${EXTERNAL_HTTPS_PORT}:${EXTERNAL_HTTPS_PORT}"
      - "${EXTERNAL_JNLP_PORT}:${EXTERNAL_JNLP_PORT}"
      - "${EXTERNAL_GITSSH_PORT}:${EXTERNAL_GITSSH_PORT}"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./certs:/certs
    healthcheck:
      test: ["CMD", "wget", "http://localhost:8080/ping","--spider"]
      interval: 2s
      timeout: 1s
      retries: 3
      start_period: 2s

  web:
    image: nginx:1.16-alpine
    restart: unless-stopped
    read_only: true
    labels:
      - traefik.http.routers.web.rule=Host(`${EXTERNAL_DOMAIN}`)
      - traefik.http.routers.web.tls=true
      - traefik.http.routers.web.entrypoints=websecure
      - traefik.http.services.web-svc.loadbalancer.server.port=80
    healthcheck:
      test: ["CMD", "wget", "http://localhost/health","--spider"]
      interval: 2s
      timeout: 1s
      retries: 3
      start_period: 2s
    volumes:
      - ./web/docs:/docs:ro
      - ./web/default.tmpl.conf:/etc/nginx/default.tmpl.conf:ro
    tmpfs:
      - /etc/nginx/conf.d
      - /tmp
      - /var/cache/nginx
      - /run # /var/run is a symlink to /run
    entrypoint: sh -x -c "envsubst '$$EXTERNAL_DOMAIN' < /etc/nginx/default.tmpl.conf > /etc/nginx/conf.d/default.conf && exec nginx -g 'daemon off;'"
    extra_hosts:
      - ${EXTERNAL_DOMAIN}:${DOCKER_BRIDGE_IP}
    environment:
      - EXTERNAL_DOMAIN=${EXTERNAL_DOMAIN}

  jenkins:
    build: ./jenkins/
    image: ${DOCKER_USERNAME}/oufti-jenkins
    secrets:
      - agent_private_key
    read_only: true
    restart: unless-stopped
    depends_on:
      - jenkins-production-node
      - jenkins-maven-jdk8-node
      - jenkins-maven-jdknext-node
    labels:
      - traefik.http.routers.jenkins.rule=Host(`${EXTERNAL_DOMAIN}`) && PathPrefix(`/jenkins`)
      - traefik.http.routers.jenkins.tls=true
      - traefik.http.routers.jenkins.entrypoints=websecure
      - traefik.http.services.jenkins.LoadBalancer.server.Port=8080
      - traefik.tcp.routers.jenkins-jnlp.rule=HostSNI(`*`)
      - traefik.tcp.routers.jenkins-jnlp.entrypoints=jnlp
      - traefik.tcp.services.jenkins-jnlp.LoadBalancer.server.Port=50000
    volumes:
      - /var/jenkins_home
      - /run
      - /tmp
    environment:
      - JENKINS_ROOT_URL=https://${EXTERNAL_DOMAIN}:${EXTERNAL_HTTPS_PORT}/jenkins
      - JENKINS_OPTS=--prefix=/jenkins
      - JENKINS_ADMIN=butler
      - AGENT_PRIVATE_KEY_FILE=/run/secrets/agent_private_key
  
  gitserver:
    build: ./gitserver/
    image: ${DOCKER_USERNAME}/oufti-gitserver
    restart: unless-stopped
    labels:
      - traefik.http.routers.gitserver.rule=Host(`${EXTERNAL_DOMAIN}`) && PathPrefix(`/gitserver`)
      - traefik.http.routers.gitserver.tls=true
      - traefik.http.routers.gitserver.entrypoints=websecure
      - traefik.http.routers.gitserver.middlewares=gitserver-stripprefix
      - traefik.http.middlewares.gitserver-stripprefix.stripprefix.prefixes=/gitserver
      - traefik.http.services.gitserver.LoadBalancer.server.Port=3000

      - traefik.tcp.routers.gitserver-ssh.rule=HostSNI(`*`)
      - traefik.tcp.routers.gitserver-ssh.entrypoints=gitssh
      - traefik.tcp.services.gitserver-ssh.LoadBalancer.server.Port=5022
    extra_hosts:
      - "${EXTERNAL_DOMAIN}:${DOCKER_BRIDGE_IP}"
    environment:
      - EXTERNAL_URL=https://${EXTERNAL_DOMAIN}:${EXTERNAL_HTTPS_PORT}/gitserver
      - EXTERNAL_DOMAIN=${EXTERNAL_DOMAIN}
      - FIRST_USER=butler
      - LOAD_SSH_KEY_FROM_JENKINS=true # Autoload the BlueOcean SSH Key into Gitea
      - SOURCE_REPO_CONFIG=/tmp/repositories.json
    volumes:
      - gitserver-data:/app/data:rw
      - ./gitserver/repositories.json:/tmp/repositories.json:ro
    healthcheck:
      test: ["CMD", "wget", "http://butler:butler@localhost:3000/butler/demoapp","--spider"]
      interval: 10s
      timeout: 2s
      retries: 3
      start_period: 10s

  jenkins-production-node:
    build:
      context: ./dind-java-images/
      target: jenkins-maven-jdk8-node
    image: ${DOCKER_USERNAME}/oufti-jenkins-production-node
    restart: unless-stopped
    privileged: true
    labels:
      - traefik.enable=false
    extra_hosts:
      - "${EXTERNAL_DOMAIN}:${DOCKER_BRIDGE_IP}"
    environment:
      - JENKINS_SLAVE_SSH_PUBKEY=ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEA6NF8iallvQVp22WDkTkyrtvp9eWW6A8YVr+kz4TjGYe7gHzIw+niNltGEFHzD8+v1I2YJ6oXevct1YeS0o9HZyN1Q9qgCgzUFtdOKLv6IedplqoPkcmF0aYet2PkEDo3MlTBckFXPITAMzF8dJSIFo9D8HfdOV0IAdx4O7PtixWKn5y2hMNG0zQPyUecp4pzC6kivAIhyfHilFR61RGL+GPXQ2MWZWFYbAGjyiYJnAmCP3NOTd0jMZEnDkbUvxhMmBYSdETk1rRgm+R4LOzFUGaHqHDLKLX+FIPKcF96hrucXzcWyLbIbEgE98OHlnVYCzRdK8jlqm8tehUc9c9WhQ== vagrant insecure public key

  jenkins-maven-jdk8-node:
    build:
      context: ./dind-java-images/
      target: jenkins-maven-jdk8-node
    image: ${DOCKER_USERNAME}/oufti-jenkins-maven-jdk8-node
    restart: unless-stopped
    privileged: true
    labels:
      - traefik.enable=false
    extra_hosts:
      - "${EXTERNAL_DOMAIN}:${DOCKER_BRIDGE_IP}"
    environment:
      - JENKINS_SLAVE_SSH_PUBKEY=ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEA6NF8iallvQVp22WDkTkyrtvp9eWW6A8YVr+kz4TjGYe7gHzIw+niNltGEFHzD8+v1I2YJ6oXevct1YeS0o9HZyN1Q9qgCgzUFtdOKLv6IedplqoPkcmF0aYet2PkEDo3MlTBckFXPITAMzF8dJSIFo9D8HfdOV0IAdx4O7PtixWKn5y2hMNG0zQPyUecp4pzC6kivAIhyfHilFR61RGL+GPXQ2MWZWFYbAGjyiYJnAmCP3NOTd0jMZEnDkbUvxhMmBYSdETk1rRgm+R4LOzFUGaHqHDLKLX+FIPKcF96hrucXzcWyLbIbEgE98OHlnVYCzRdK8jlqm8tehUc9c9WhQ== vagrant insecure public key

  jenkins-maven-jdknext-node:
    build: ./jenkins-maven-jdknext-node/
    image: ${DOCKER_USERNAME}/oufti-jenkins-maven-jdknext-node
    restart: unless-stopped
    read_only: true
    labels:
      - traefik.enable=false
    extra_hosts:
      - "${EXTERNAL_DOMAIN}:${DOCKER_BRIDGE_IP}"
    environment:
      - START_DOCKER=no
      - JENKINS_SLAVE_SSH_PUBKEY=ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEA6NF8iallvQVp22WDkTkyrtvp9eWW6A8YVr+kz4TjGYe7gHzIw+niNltGEFHzD8+v1I2YJ6oXevct1YeS0o9HZyN1Q9qgCgzUFtdOKLv6IedplqoPkcmF0aYet2PkEDo3MlTBckFXPITAMzF8dJSIFo9D8HfdOV0IAdx4O7PtixWKn5y2hMNG0zQPyUecp4pzC6kivAIhyfHilFR61RGL+GPXQ2MWZWFYbAGjyiYJnAmCP3NOTd0jMZEnDkbUvxhMmBYSdETk1rRgm+R4LOzFUGaHqHDLKLX+FIPKcF96hrucXzcWyLbIbEgE98OHlnVYCzRdK8jlqm8tehUc9c9WhQ== vagrant insecure public key

  devbox:
    build:
      context: ./dind-java-images/
      target: devbox
    image: ${DOCKER_USERNAME}/oufti-devbox
    restart: unless-stopped
    labels:
      - traefik.http.routers.devbox.rule=Host(`${EXTERNAL_DOMAIN}`) && PathPrefix(`/devbox`)
      - traefik.http.routers.devbox.entrypoints=websecure
      - traefik.http.routers.devbox.middlewares=devbox-stripprefix
      - traefik.http.routers.devbox.tls=true
      - traefik.http.middlewares.devbox-stripprefix.stripprefix.prefixes=/devbox
      - traefik.http.services.devbox-svc.LoadBalancer.server.Port=7681
    privileged: true
    extra_hosts:
      - "${EXTERNAL_DOMAIN}:${DOCKER_BRIDGE_IP}"

  docker-service:
    build: ./docker-service/
    image: ${DOCKER_USERNAME}/oufti-docker-service
    restart: unless-stopped
    read_only: true
    labels:
      - traefik.enable=false
    command: tcp-listen:2375,reuseaddr,fork unix:/docker.sock
    volumes:
      - /var/run/docker.sock:/docker.sock


volumes:
  gitserver-data:

secrets:
  agent_private_key:
    file: ./.id_vagrant
